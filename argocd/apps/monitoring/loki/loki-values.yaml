loki:
  # Muss gepr√ºft werden, ob ok ohne Authentifizierung
   auth_enabled: false
   podLabels:
    "azure.workload.identity/use": "true" # Add this label to the Loki pods to enable workload identity
   schemaConfig:
     configs:
       - from: "2024-04-01"
         store: tsdb
         object_store: azure
         schema: v13
         index:
           prefix: loki_index_
           period: 24h
   storage_config:
     azure:
      account_name: "lokistorageacct01" # Name of the storage account, see $STORAGE_ACCOUNT_NAME
      container_name: "chunks" # Your actual Azure Blob Storage container name (loki-azure-dev-chunks)
      use_federated_token: true # Use federated token for authentication
   ingester:
       chunk_encoding: snappy
   pattern_ingester:
       enabled: true
   limits_config:
     allow_structured_metadata: true
     volume_enabled: true
     retention_period: 672h # 28 days retention
   compactor:
     retention_enabled: true 
     delete_request_store: azure
   ruler:
    enable_api: true
    storage:
      type: azure
      azure:
        account_name: "lokistorageacct01" # Name of the storage account, see $STORAGE_ACCOUNT_NAME
        container_name: "ruler" # Your actual Azure Blob Storage container name (loki-azure-dev-ruler)
        use_federated_token: true # Use federated token for authentication
      alertmanager_url: http://prom:9093 # The URL of the Alertmanager to send alerts (Prometheus, Mimir, etc.)

   querier:
      max_concurrent: 4

   storage:
      type: azure
      bucketNames:
        chunks: "chunks" # Your actual Azure Blob Storage container name (loki-azure-dev-chunks)
        ruler: "ruler" # Your actual Azure Blob Storage container name (loki-azure-dev-ruler)
        # admin: "admin-loki-devrel" # Your actual Azure Blob Storage container name (loki-azure-dev-admin)
      azure:
        accountName: "lokistorageacct01" # Name of the storage account, see $STORAGE_ACCOUNT_NAME
        useFederatedToken: true # Use federated token for authentication

# Define the Azure workload identity
serviceAccount:
  annotations:
    "azure.workload.identity/client-id": "3e93a85d-a5a0-431a-b585-a53c0ffb70fd" # Client ID of the Workload Identity (Managed Identity), see $WORKLOAD_IDENTITY_NAME
  labels:
    "azure.workload.identity/use": "true"

deploymentMode: Distributed

ingester:
 replicas: 3
 zoneAwareReplication:
  enabled: false

querier:
 replicas: 3
 maxUnavailable: 2

queryFrontend:
 replicas: 2
 maxUnavailable: 1

queryScheduler:
 replicas: 2

distributor:
 replicas: 3
 maxUnavailable: 2
compactor:
 replicas: 1

indexGateway:
 replicas: 2
 maxUnavailable: 1

ruler:
 replicas: 1
 maxUnavailable: 1


# This exposes the Loki gateway so it can be written to and queried externaly
# gateway:
#  service:
#    type: LoadBalancer
#  basicAuth: 
#      enabled: true
#      existingSecret: loki-basic-auth

# Since we are using basic auth, we need to pass the username and password to the canary
# lokiCanary:
#   extraArgs:
#     - -pass=$(LOKI_PASS)
#     - -user=$(LOKI_USER)
#   extraEnv:
#     - name: LOKI_PASS
#       valueFrom:
#         secretKeyRef:
#           name: canary-basic-auth
#           key: password
#     - name: LOKI_USER
#       valueFrom:
#         secretKeyRef:
#           name: canary-basic-auth
#           key: username

# Enable minio for storage
minio:
 enabled: false

backend:
 replicas: 0
read:
 replicas: 0
write:
 replicas: 0

singleBinary:
 replicas: 0

# Chunkcache reduziert, damit Loki staret auf schwachen Nodes
chunksCache:
  # default is 500MB, with limited memory keep this smaller
  #writebackSizeLimit: 10MB
  #default: allocatedMemory: 8192
  allocatedMemory: 2048