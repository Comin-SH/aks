# main.tf - Beispiel mit Modulen
#
# Diese Datei zeigt, wie die bestehende Infrastruktur auf Module umgestellt werden kann.
# Die aktuelle Implementierung ist in main.tf, keyvault.tf, blobstorage.tf verteilt.
#
# WICHTIG: Migration erfordert terraform state mv Befehle!
# Siehe modules/README.md für Details.

# Data Sources
data "azurerm_client_config" "current" {}

# Resource Group
resource "azurerm_resource_group" "rg" {
  location = var.resource_group_location
  name     = var.resource_group_name

  tags = local.common_tags
}

# AKS Cluster Module
module "aks_cluster" {
  source = "./modules/aks-cluster"

  location            = azurerm_resource_group.rg.location
  cluster_name        = var.cluster_name
  resource_group_name = azurerm_resource_group.rg.name
  dns_prefix          = var.dns_prefix

  agent_pool_vm_size    = var.agent_pool_vm_size
  agent_pool_node_count = var.agent_pool_node_count
  user_pool_vm_size     = var.user_pool_vm_size
  user_pool_node_count  = var.user_pool_node_count

  admin_group_object_ids       = var.admin_group_object_ids
  rbac_reader_group_object_ids = var.rbac_reader_group_object_ids
  rbac_admin_group_object_ids  = var.rbac_admin_group_object_ids

  local_account_disabled = false

  tags = local.common_tags
}

# Key Vault Module
module "key_vault" {
  source = "./modules/key-vault"

  keyvault_name          = var.keyvault_name
  resource_group_name    = azurerm_resource_group.rg.name
  location               = azurerm_resource_group.rg.location
  tenant_id              = data.azurerm_client_config.current.tenant_id
  admin_principal_id     = data.azurerm_client_config.current.object_id
  grafana_admin_password = var.SECRET_GRAFANA_ADMIN_PASSWORD
  workload_identity_name = var.workload_identity_name
  oidc_issuer_url        = module.aks_cluster.oidc_issuer_url

  purge_protection_enabled = false  # Für Prod: true

  tags = local.common_tags
}

# Blob Storage Module
module "blob_storage" {
  source = "./modules/blob-storage"

  storage_account_name           = var.STORAGE_ACCOUNT_NAME
  resource_group_name            = azurerm_resource_group.rg.name
  location                       = var.STORAGE_ACCOUNT_LOCATION
  replication_type               = "LRS"
  workload_identity_principal_id = module.key_vault.monitoring_identity_principal_id

  tags = local.common_tags
}

# Locals
locals {
  common_tags = {
    Environment = "Development"
    ManagedBy   = "Terraform"
    Project     = "AKS-Platform"
  }
}

# Outputs - aktualisiert für Module
output "resource_group_name" {
  value = azurerm_resource_group.rg.name
}

output "kubernetes_cluster_name" {
  value = module.aks_cluster.cluster_name
}

output "kubernetes_cluster_id" {
  value = module.aks_cluster.cluster_id
}

output "key_vault_name" {
  value = module.key_vault.key_vault_name
}

output "storage_account_name" {
  value = module.blob_storage.storage_account_name
}

output "workload_identity_client_id" {
  value = module.key_vault.monitoring_identity_client_id
}
